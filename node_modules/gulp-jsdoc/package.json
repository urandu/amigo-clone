{
  "name": "gulp-jsdoc",
  "version": "0.1.5",
  "description": "A jsdoc plugin for Gulp",
  "keywords": [
    "gulpplugin",
    "jsdoc",
    "documentation",
    "javascript",
    "gulp"
  ],
  "homepage": "https://github.com/jsBoot/gulp-jsdoc",
  "bugs": {
    "url": "https://github.com/jsBoot/gulp-jsdoc/issues",
    "email": "dev@webitup.fr"
  },
  "license": "MIT",
  "author": {
    "name": "Mangled Deutz",
    "email": "olivier@webitup.fr",
    "url": "https://github.com/dmp42"
  },
  "contributors": [],
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/jsBoot/gulp-jsdoc.git"
  },
  "scripts": {
    "test": "istanbul test _mocha --report html -- test/*.js --reporter spec",
    "coveralls": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage"
  },
  "dependencies": {
    "through2": "^1.0.0",
    "gulp-util": "~2.2.14",
    "chalk": "~0.4.0",
    "text-table": "~0.2.0",
    "vinyl-fs": "~0.3.0",
    "jsdoc": "3.3.0-alpha5",
    "taffydb": "~2.7.2",
    "ink-docstrap": "~0.4.5",
    "wrench": "~1.5.6",
    "marked": "~0.3.1"
  },
  "devDependencies": {
    "mocha": "^1.17.1",
    "coveralls": "^2.7.1",
    "mocha-lcov-reporter": "~0.0.1",
    "istanbul": "^0.2.4",
    "event-stream": "~3.1.0",
    "should": "^3.1.4",
    "jshint": "^2.4.4",
    "gulp": "^3.5.6",
    "gulp-template": "~0.1.1",
    "gulp-jshint": "^1.3.4",
    "gulp-eslint": "~0.1.2",
    "jshint-stylish": "^0.1.5"
  },
  "engines": {
    "node": ">=0.10.0",
    "npm": ">=1.0.0"
  },
  "private": false,
  "readme": "# gulp-jsdoc\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]  [![Coverage Status][coveralls-image]][coveralls-url] [![Dependency Status][depstat-image]][depstat-url] [![Code Climate][codeclimate-image]][codeclimate-url]\n\n> jsdoc plugin for [gulp](https://github.com/wearefractal/gulp)\n\nBIG FAT WARNING\n-------------\n\njsdoc is currently (alpha5+) going through important inner modifications.\nAlso, jsdoc has an history at doing quesitonable things (certainly, at least in part, due to its desire to support alternative javascript engines like Rhino), including, not limited to, hard copying files into the module folder at runtime (templates), and using non standard require calls and paths.\nFinally, jsdoc really is not meant to be used as a library. It provides a cli, and little more, with no clean/stable library API.\n\nAll in all, maintaining a working \"true\" gulp plugin (one that uses streams and does not simply call a binary) proved to be a very painful task, with ultimately little benefit, as I stopped using jsdoc altogether for my own uses.\n\nFor all these reasons, I decided to stop maintaining this plugin, and won't work on it until at least a new jsdoc stable version is released.\nIf you still use it and have a PR, I'll review it though.\n\nTL;DR\n-------------\n\nInstall `gulp-jsdoc` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-jsdoc\n```\n\nThen, use it:\n\n```javascript\nvar jsdoc = require(\"gulp-jsdoc\");\n\ngulp.src(\"./src/*.js\")\n  .pipe(jsdoc('./documentation-output'))\n```\n\nAPI\n-------------\n\n### jsdoc.parser(infos, name)\n\n```javascript\ngulp.src(\"./src/*.js\")\n  .pipe(jsdoc.parser(infos, name))\n  .pipe(gulp.dest('./somewhere'))\n```\n\nWill process any files it has been fed, and generate a new vinyl JSON usable by the generator to produce actual documentation.\n\nBy default, the filename is 'jsdoc.json' unless overriden by the name parameter.\n\nNote that if you feed the parser a README.md file, this file will be rendered and used as a long description for your package.\n\neg:\n\n```javascript\ngulp.src([\"./src/*.js\", \"README.md\"])\n  .pipe(jsdoc.parser(infos, name))\n  .pipe(gulp.dest('./somewhere'))\n```\n\nThe optional infos parameter is fed to jsdoc.\n\n#### infos.name\nType: `String`  \nDefault: `''`\n\n#### infos.description\nType: `String`  \nDefault: `''`\n\n#### infos.version\nType: `String`  \nDefault: `''`\n\n#### infos.licenses\nType: `Array`  \nDefault: `[]`\n\n#### infos.plugins\nType: `Array`  \nDefault: `false`\n\njsDoc plugins to use. Example: `['plugins/markdown']`\n\n\n### jsdoc.generator(destination, template, options)\n\n```javascript\ngulp.src(\"./somewhere/jsdoc.json\")\n  .pipe(jsdoc.generator('./destination'))\n```\n\nor directly from the parser pipe:\n\n```javascript\ngulp.src([\"./src/*.js\", \"README.md\"])\n  .pipe(jsdoc.parser(infos, name))\n  .pipe(jsdoc.generator('./destination'))\n```\n\nBy default, the generator uses the default template.\n\n#### destination\nType: `String`  \nDefault: `''`\n\nWhere the documentation will be outputed.\nIf an infos object with a version / name was provided to the parser, these will be used in the final path.\n\n#### template\n\nYou may optionnally specify a custom template, using the following syntax\n\n```\n{\n  path: 'path_to_template',\n  anyTemplateSpecificParameter: 'whatever'\n}\n```\n\nAs a courtesy, gulp-jsdoc bundles ink-docstrap templates, that you may use directly this way:\n\n```\n{\n    path            : \"ink-docstrap\",\n    systemName      : \"Something\",\n    footer          : \"Something\",\n    copyright       : \"Something\",\n    navType         : \"vertical\",\n    theme           : \"journal\",\n    linenums        : true,\n    collapseSymbols : false,\n    inverseNav      : false\n  }\n```\n\nSee [their site](https://github.com/terryweiss/docstrap) for more infos.\n\n\n#### options\n\nYou may optionnally override default jsdoc behavior with this object:\n\n```\n  {\n    showPrivate: false,\n    monospaceLinks: false,\n    cleverLinks: false,\n    outputSourceFiles: true\n  }\n ```\n\n\n### jsdoc(destination, template, infos, options)\n\n```javascript\ngulp.src([\"./src/*.js\", \"README.md\"])\n  .pipe(jsdoc('./destination'))\n```\n\n... is simply a shortcut for\n\n```javascript\ngulp.src([\"./src/*.js\", \"README.md\"])\n  .pipe(jsdoc.parser())\n  .pipe(jsdoc.generator('./destination'))\n```\n\n\nLimitations\n-------------\n\nOnly the parser is really using streams. While the generator will read from the result of the parser, it will also read and write templates files synchronously on its own.\n\nThere is nothing we can do about that, unless changing the jsdoc templating API entirely, and all existing templates...\n\nAlso, the following are currently not supported:\n\n * tutorials\n * sourcing configuration from jsdoc.conf files\n\nIf you have a use-case that you can't do with straight gulp in a better way, please say so.\n\nLicense\n-------------\n\n[MIT License](http://en.wikipedia.org/wiki/MIT_License)\n\n[npm-url]: https://npmjs.org/package/gulp-jsdoc\n[npm-image]: https://badge.fury.io/js/gulp-jsdoc.png\n\n[travis-url]: http://travis-ci.org/jsBoot/gulp-jsdoc\n[travis-image]: https://secure.travis-ci.org/jsBoot/gulp-jsdoc.png?branch=master\n\n[coveralls-url]: https://coveralls.io/r/jsBoot/gulp-jsdoc\n[coveralls-image]: https://coveralls.io/repos/jsBoot/gulp-jsdoc/badge.png?branch=master\n\n[depstat-url]: https://david-dm.org/jsBoot/gulp-jsdoc\n[depstat-image]: https://david-dm.org/jsBoot/gulp-jsdoc.png\n\n[codeclimate-url]: https://codeclimate.com/github/jsBoot/gulp-jsdoc\n[codeclimate-image]: https://codeclimate.com/github/jsBoot/gulp-jsdoc.png\n",
  "readmeFilename": "README.md",
  "_id": "gulp-jsdoc@0.1.5",
  "dist": {
    "shasum": "69968c8904c9b4a37eefb1f5bd1f19dec08b956e"
  },
  "deprecated": "This project is deprecated. Use gulp-jsdoc3 instead.",
  "_from": "gulp-jsdoc@^0.1.4",
  "_resolved": "https://registry.npmjs.org/gulp-jsdoc/-/gulp-jsdoc-0.1.5.tgz"
}
