{
  "name": "ternary",
  "main": "index.js",
  "version": "1.0.0",
  "description": "Build a ternary statement",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/bendrucker/ternary"
  },
  "author": {
    "name": "Ben Drucker",
    "email": "bvdrucker@gmail.com",
    "url": "bendrucker.me"
  },
  "scripts": {
    "test": "standard && tape test.js"
  },
  "keywords": [
    "ternary",
    "code",
    "js"
  ],
  "devDependencies": {
    "tape": "^4.0.0",
    "standard": "^4.0.0"
  },
  "files": [
    "index.js"
  ],
  "readme": "# ternary [![Build Status](https://travis-ci.org/bendrucker/ternary.svg?branch=master)](https://travis-ci.org/bendrucker/ternary)\n\n> Build a ternary statement\n\n\n## Install\n\n```\n$ npm install --save ternary\n```\n\n\n## Usage\n\n```js\nvar ternary = require('ternary')\n\nternary('condition', 'whenTruthy' : 'whenFalsy')\n//=> condition ? whenTruthy : whenFalsy\n```\n\n## API\n\n#### `ternary(condition, expr1, expr2)` -> `string`\n\n##### condition\n\n*Required*  \nType: `string`\n\nThe ternary condition.\n\n##### expr1\n\n*Required*  \nType: `string`\n\nThe expression to use when the condition is truthy.\n\n##### expr2\n\n*Required*  \nType: `string`\n\nThe expression to use when the condition is falsy.\n\n\n## License\n\nMIT Â© [Ben Drucker](http://bendrucker.me)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/bendrucker/ternary/issues"
  },
  "homepage": "https://github.com/bendrucker/ternary",
  "_id": "ternary@1.0.0",
  "dist": {
    "shasum": "2ec00411afce1a3d109b5861d9e707a5ad1a98a3"
  },
  "_from": "ternary@~1.0.0",
  "_resolved": "https://registry.npmjs.org/ternary/-/ternary-1.0.0.tgz"
}
