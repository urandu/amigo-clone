{
  "name": "gulp-bump",
  "description": "Bump npm versions with Gulp (gulpjs.com)",
  "version": "0.3.1",
  "homepage": "http://github.com/stevelacy/gulp-bump",
  "repository": {
    "type": "git",
    "url": "git://github.com/stevelacy/gulp-bump.git"
  },
  "author": {
    "name": "Steve Lacy",
    "email": "me@slacy.me",
    "url": "http://slacy.me"
  },
  "main": "./index.js",
  "dependencies": {
    "dot-object": "^0.6.0",
    "gulp-util": "^3.0.4",
    "semver": "^4.3.1",
    "through2": "^0.5.1"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "engines": {
    "node": ">= 0.9.0"
  },
  "keywords": [
    "gulp",
    "bump",
    "semver",
    "gulpplugin",
    "version",
    "versioning",
    "gulp-version",
    "gulp-plugin"
  ],
  "license": "MIT",
  "readme": "# gulp-bump\n[![Build Status](https://travis-ci.org/stevelacy/gulp-bump.png?branch=master)](https://travis-ci.org/stevelacy/gulp-bump)\n[![NPM version](https://badge.fury.io/js/gulp-bump.png)](http://badge.fury.io/js/gulp-bump)\n\n> Bump any JSON file which supports [semver](http://semver.org/) versioning\n\n## Information\n\n<table>\n<tr>\n<td>Package</td><td>gulp-bump</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Bump any Semver version json file\n with gulp (gulpjs.com)</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.9</td>\n</tr>\n<tr>\n<td>Gulp Version</td>\n<td>3.x</td>\n</tr>\n</table>\n\n## Usage\n\nIf you are just requiring a bump for npm, consider using [npm version](https://docs.npmjs.com/cli/version)\n\n#### Install\n\n```bash\n$ npm install gulp-bump --save\n```\n\n## Example\n\n```js\nvar gulp = require('gulp');\nvar bump = require('gulp-bump');\n\n// Basic usage:\n// Will patch the version\ngulp.task('bump', function(){\n  gulp.src('./component.json')\n  .pipe(bump())\n  .pipe(gulp.dest('./'));\n});\n\n// Defined method of updating:\n// Semantic\ngulp.task('bump', function(){\n  gulp.src('./*.json')\n  .pipe(bump({type:'minor'}))\n  .pipe(gulp.dest('./'));\n});\n\n// Defined method of updating:\n// Semantic major\ngulp.task('bump', function(){\n  gulp.src('./bower.json')\n  .pipe(bump({type:'major'}))\n  .pipe(gulp.dest('./'));\n});\n\n// Defined method of updating:\n// Set a specific version\ngulp.task('bump', function(){\n  gulp.src('./*.json')\n  .pipe(bump({version: '1.2.3'}))\n  .pipe(gulp.dest('./'));\n});\n\n// Update bower, component, npm at once:\ngulp.task('bump', function(){\n  gulp.src(['./bower.json', './component.json', './package.json'])\n  .pipe(bump({type:'major'}))\n  .pipe(gulp.dest('./'));\n});\n\n// Override the tab size for indenting\n// (or simply omit to keep the current formatting)\ngulp.task('bump', function(){\n  gulp.src('./package.json')\n  .pipe(bump({type:'major', indent: 4 }))\n  .pipe(gulp.dest('./'));\n});\n\n// Define the key for versioning off\ngulp.task('bump', function(){\n  gulp.src('./package.json')\n  .pipe(bump({key: \"appversion\"}))\n  .pipe(gulp.dest('./'));\n});\n\n\n```\n#### Bumping version and outputting different files\n```js\n\n\n// `fs` is used instead of require to prevent caching in watch (require caches)\n\nvar fs = require('fs');\nvar getPackageJson = function () {\n  return JSON.parse(fs.readFileSync('./package.json', 'utf8'));\n};\n\n// bump versions on package/bower/manifest\ngulp.task('bump', function () {\n  // reget package\n  var pkg = getPackageJson();\n  // increment version\n  var newVer = semver.inc(pkg.version, 'patch');\n\n  // uses gulp-filter\n  var manifestFilter = tasks.filter(['manifest.json']);\n  var regularJsons = tasks.filter(['!manifest.json']);\n\n  return gulp.src(['./bower.json', './package.json', './src/manifest.json'])\n    .pipe(tasks.bump({\n      version: newVer\n    }))\n    .pipe(manifestFilter)\n    .pipe(gulp.dest('./src'))\n    .pipe(manifestFilter.restore())\n    .pipe(regularJsons)\n    .pipe(gulp.dest('./'));\n});\n\n// Run the gulp tasks\ngulp.task('default', function(){\n  gulp.run('bump');\n});\n```\n\n####You can view more examples in the [example folder.](https://github.com/stevelacy/gulp-bump/tree/master/examples)\n\n## Options\n### options.type\nSemver version type to bump.\n\n    Type: `String`\n    Default: `patch`\n    Valid values: `major|minor|patch|prerelease`\n\nExample:\n\n```js\n.pipe(bump({type: 'Major'})\n.pipe(bump()) //--> defaults to patch\n```\n\n### options.key\nSet the versioning key\n\n    Type: `String`\n    Default: `version`\n\nExample:\n\n```js\n.pipe(bump({key: 'appversion'}))\n.pipe(bump({key: 'build-version'}))\n.pipe(bump({key: 'dev-version', type: 'major'}))\n```\n##### Dot notation is supported for nested versions:\n\n```js\n\n.pipe(bump({key: {'sublevel.version'}}))\n\n/*\n{\n  \"sublevel\": {\n    \"version\": \"<semver>\"\n  }\n}\n*/\n```\n\n### options.version\nSet a specific version to bump to.\n\n    Type: `String`\n    Default: `null`\n\nExample:\n\n```js\n.pipe(bump({version: '1.2.3'}))\n.pipe(bump({version: '1.0.0-alpha'}))\n```\n\n### options.indent\nSet the amount of spaces for indentation in the result JSON file.\n\n    Type: `Number`\n    Default: Same as original source file\n\n### options.preid\nSet the prerelase tag to use\n\n    Type: `String`\n    Default: `null`\n\nExample:\n\n```js\nbump({type: 'prerelease', preid : 'alphaWhateverTheYWant'});\n // => '0.0.2-alphaWhateverTheYWant.0'\n```\n\n## Versioning\n#### Versioning Used: [Semantic](http://semver.org/)\n#### String, lowercase\n\n  - MAJOR (\"major\") version when you make incompatible API changes\n  - MINOR (\"minor\") version when you add functionality in a backwards-compatible manner\n  - PATCH (\"patch\") version when you make backwards-compatible bug fixes.\n  - PRERELEASE (\"prerelease\") a pre-release version\n\n#### Version example\n\n    major: 1.0.0\n    minor: 0.1.0\n    patch: 0.0.2\n    prerelease: 0.0.1-2\n\n\n\n## LICENSE\n\n(MIT License)\n\nCopyright (c) 2015 Steve Lacy <me@slacy.me> slacy.me\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/stevelacy/gulp-bump/issues"
  },
  "_id": "gulp-bump@0.3.1",
  "dist": {
    "shasum": "e4c9216760f20a35dac434507b0822a6416ec7ea"
  },
  "_from": "gulp-bump@^0.3.0",
  "_resolved": "https://registry.npmjs.org/gulp-bump/-/gulp-bump-0.3.1.tgz"
}
