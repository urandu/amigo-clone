{
  "name": "glsl-token-inject-block",
  "version": "1.1.0",
  "description": "safely inject a block of tokens into a shader",
  "main": "index.js",
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "dependencies": {},
  "devDependencies": {
    "faucet": "0.0.1",
    "glsl-token-string": "^1.0.1",
    "glsl-tokenizer": "^2.0.2",
    "tape": "^4.0.0"
  },
  "scripts": {
    "test": "node test.js | faucet"
  },
  "keywords": [
    "glsl",
    "glslify",
    "stackgl",
    "token",
    "tokenize",
    "tokenizer",
    "start",
    "varying",
    "define",
    "inject"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/Jam3/glsl-token-inject-block.git"
  },
  "homepage": "https://github.com/Jam3/glsl-token-inject-block",
  "bugs": {
    "url": "https://github.com/Jam3/glsl-token-inject-block/issues"
  },
  "readme": "# glsl-token-inject-block\n\n[![unstable](http://badges.github.io/stability-badges/dist/unstable.svg)](http://github.com/badges/stability-badges)\n\nInjects a \"block\" of GLSL tokens into a shader, after any `#version`, `#extension` and `precision` statements. This will pad the new tokens with the necessary amount of newlines (but no more).\n\nThis module ignores token `line`, `column` and `position`.\n\n## Example\n\nYour source:\n\n```js\nvar tokenizer = require('glsl-tokenizer')\nvar inject = require('glsl-token-inject-block')\nvar stringify = require('glsl-token-string')\n\nvar tokens = tokenizer(shaderInput)\nvar newToken = { \n  type: 'preprocessor', \n  data: '#define FOOBAR' \n}\n\nvar source = stringify(inject(tokens, newToken))\nconsole.log(source)\n```\n\nThe following shader input:\n\n```glsl\n// some comment\n#version 300 es\n#extension SOME_EXTENSION : enable\n\nvoid main() {}\n```\n\nResults in the following injected define:\n\n```glsl\n// some comment\n#version 300 es\n#extension SOME_EXTENSION : enable\n#define FOOBAR\n\nvoid main() {}\n```\n\n## Usage\n\n[![NPM](https://nodei.co/npm/glsl-token-inject-block.png)](https://www.npmjs.com/package/glsl-token-inject-block)\n\n#### `tokens = inject(tokens, newTokens)`\n\nFor the given shader source (`tokens`), injects `newTokens` into them, assuming the new tokens are a \"block\" of code that should be placed on its own line. \n\n`newTokens` can be a single token object, or an array of token objects.\n\nModifies `tokens` in place and returns it.\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/Jam3/glsl-token-inject-block/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "glsl-token-inject-block@1.1.0",
  "dist": {
    "shasum": "7b94b75e571df306ed1244a89ab232c734841a16"
  },
  "_from": "glsl-token-inject-block@^1.0.0",
  "_resolved": "https://registry.npmjs.org/glsl-token-inject-block/-/glsl-token-inject-block-1.1.0.tgz"
}
