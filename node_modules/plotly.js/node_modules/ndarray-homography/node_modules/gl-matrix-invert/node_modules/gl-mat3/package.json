{
  "name": "gl-mat3",
  "version": "1.0.0",
  "description": "gl-matrix's mat3, split into smaller pieces",
  "main": "index.js",
  "license": {
    "type": "zlib",
    "url": "http://github.com/gl-modules/gl-mat3/blob/master/LICENSE.md"
  },
  "scripts": {
    "get-docs": "cat *.js | dox --api"
  },
  "contributors": [
    {
      "name": "Brandon Jones",
      "email": "tojiro@gmail.com"
    },
    {
      "name": "Colin MacKenzie IV",
      "email": "sinisterchipmunk@gmail.com"
    },
    {
      "name": "Hugh Kennedy",
      "email": "hughskennedy@gmail.com",
      "url": "http://hughsk.io/"
    }
  ],
  "dependencies": {},
  "devDependencies": {
    "dox": "git://github.com/hughsk/dox#api-context"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gl-modules/gl-mat3.git"
  },
  "keywords": [
    "gl-matrix",
    "matrix",
    "maths"
  ],
  "homepage": "https://github.com/gl-modules/gl-mat3",
  "bugs": {
    "url": "https://github.com/gl-modules/gl-mat3/issues"
  },
  "readme": "# gl-mat3 [![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nPart of a fork of [@toji](http://github.com/toji)'s\n[gl-matrix](http://github.com/toji/gl-matrix) split into smaller pieces: this\npackage contains `glMatrix.mat3`.\n\n## Usage\n\n[![NPM](https://nodei.co/npm/gl-mat3.png)](https://nodei.co/npm/gl-mat3/)\n\n### `mat3 = require('gl-mat3')`\n\nWill load all of the module's functionality and expose it on a single\nobject. Note that any of the methods may also be required directly\nfrom their files.\n\nFor example, the following are equivalent:\n\n``` javascript\nvar scale = require('gl-mat3').scale\nvar scale = require('gl-mat3/scale')\n```\n\n## API\n\n  - [mat3.adjoint()](#mat3adjointoutmat3amat3)\n  - [mat3.clone()](#mat3cloneamat3)\n  - [mat3.copy()](#mat3copyoutmat3amat3)\n  - [mat3.create()](#mat3create)\n  - [mat3.determinant()](#mat3determinantamat3)\n  - [mat3.frob()](#mat3frobamat3)\n  - [mat3.fromMat2d()](#mat3frommat2doutmat3amat2d)\n  - [mat3.fromMat4()](#mat3frommat4outmat3amat4)\n  - [mat3.fromQuat()](#mat3fromquatoutmat3qquat)\n  - [mat3.identity()](#mat3identityoutmat3)\n  - [mat3.invert()](#mat3invertoutmat3amat3)\n  - [mat3.multiply()](#mat3multiplyoutmat3amat3bmat3)\n  - [mat3.normalFromMat4()](#mat3normalfrommat4outmat3amat4)\n  - [mat3.rotate()](#mat3rotateoutmat3amat3radnumber)\n  - [mat3.scale()](#mat3scaleoutmat3amat3vvec2)\n  - [mat3.str()](#mat3strmatmat3)\n  - [mat3.translate()](#mat3translateoutmat3amat3vvec2)\n  - [mat3.transpose()](#mat3transposeoutmat3amat3)\n\n## mat3.adjoint(out:mat3, a:mat3)\n\n  Calculates the adjugate of a mat3\n\n## mat3.clone(a:mat3)\n\n  Creates a new mat3 initialized with values from an existing matrix\n\n## mat3.copy(out:mat3, a:mat3)\n\n  Copy the values from one mat3 to another\n\n## mat3.create()\n\n  Creates a new identity mat3\n\n## mat3.determinant(a:mat3)\n\n  Calculates the determinant of a mat3\n\n## mat3.frob(a:mat3)\n\n  Returns Frobenius norm of a mat3\n\n## mat3.fromMat2d(out:mat3, a:mat2d)\n\n  Copies the values from a mat2d into a mat3\n\n## mat3.fromMat4(out:mat3, a:mat4)\n\n  Copies the upper-left 3x3 values into the given mat3.\n\n## mat3.fromQuat(out:mat3, q:quat)\n\n  Calculates a 3x3 matrix from the given quaternion\n\n## mat3.identity(out:mat3)\n\n  Set a mat3 to the identity matrix\n\n## mat3.invert(out:mat3, a:mat3)\n\n  Inverts a mat3\n\n## mat3.multiply(out:mat3, a:mat3, b:mat3)\n\n  Multiplies two mat3's\n\n## mat3.normalFromMat4(out:mat3, a:mat4)\n\n  Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n\n## mat3.rotate(out:mat3, a:mat3, rad:Number)\n\n  Rotates a mat3 by the given angle\n\n## mat3.scale(out:mat3, a:mat3, v:vec2)\n\n  Scales the mat3 by the dimensions in the given vec2\n\n## mat3.str(mat:mat3)\n\n  Returns a string representation of a mat3\n\n## mat3.translate(out:mat3, a:mat3, v:vec2)\n\n  Translate a mat3 by the given vector\n\n## mat3.transpose(out:mat3, a:mat3)\n\n  Transpose the values of a mat3\n\n## License\n\n[zlib](http://en.wikipedia.org/wiki/Zlib_License). See [LICENSE.md](http://github.com/hughsk/gl-mat3/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "gl-mat3@1.0.0",
  "dist": {
    "shasum": "550754a8acb224b256a67ac2ea7a639a93c20c6d"
  },
  "_from": "gl-mat3@^1.0.0",
  "_resolved": "https://registry.npmjs.org/gl-mat3/-/gl-mat3-1.0.0.tgz"
}
