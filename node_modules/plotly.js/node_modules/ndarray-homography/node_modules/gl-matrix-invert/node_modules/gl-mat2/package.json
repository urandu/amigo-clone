{
  "name": "gl-mat2",
  "version": "1.0.0",
  "description": "gl-matrix's mat2, split into smaller pieces",
  "main": "index.js",
  "license": {
    "type": "zlib",
    "url": "http://github.com/gl-modules/gl-mat2/blob/master/LICENSE.md"
  },
  "scripts": {
    "get-docs": "cat *.js | dox --api"
  },
  "contributors": [
    {
      "name": "Brandon Jones",
      "email": "tojiro@gmail.com"
    },
    {
      "name": "Colin MacKenzie IV",
      "email": "sinisterchipmunk@gmail.com"
    },
    {
      "name": "Hugh Kennedy",
      "email": "hughskennedy@gmail.com",
      "url": "http://hughsk.io/"
    }
  ],
  "dependencies": {},
  "devDependencies": {
    "dox": "git://github.com/hughsk/dox#api-context"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gl-modules/gl-mat2.git"
  },
  "keywords": [
    "gl-matrix",
    "matrix",
    "maths"
  ],
  "homepage": "https://github.com/gl-modules/gl-mat2",
  "bugs": {
    "url": "https://github.com/gl-modules/gl-mat2/issues"
  },
  "readme": "# gl-mat2 [![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nPart of a fork of [@toji](http://github.com/toji)'s\n[gl-matrix](http://github.com/toji/gl-matrix) split into smaller pieces: this\npackage contains `glMatrix.mat2`.\n\n## Usage\n\n[![NPM](https://nodei.co/npm/gl-mat2.png)](https://nodei.co/npm/gl-mat2/)\n\n### `mat2 = require('gl-mat2')`\n\nWill load all of the module's functionality and expose it on a single\nobject. Note that any of the methods may also be required directly\nfrom their files.\n\nFor example, the following are equivalent:\n\n``` javascript\nvar scale = require('gl-mat2').scale\nvar scale = require('gl-mat2/scale')\n```\n\n## API\n\n  - [mat2.adjoint()](#mat2adjointoutmat2amat2)\n  - [mat2.copy()](#mat2copyoutmat2amat2)\n  - [mat2.create()](#mat2create)\n  - [mat2.determinant()](#mat2determinantamat2)\n  - [mat2.frob()](#mat2frobamat2)\n  - [mat2.identity()](#mat2identityoutmat2)\n  - [mat2.invert()](#mat2invertoutmat2amat2)\n  - [mat2.ldu()](#mat2ldulmat2dmat2umat2amat2)\n  - [mat2.multiply()](#mat2multiplyoutmat2amat2bmat2)\n  - [mat2.rotate()](#mat2rotateoutmat2amat2radnumber)\n  - [mat2.scale()](#mat2scaleoutmat2amat2vvec2)\n  - [mat2.transpose()](#mat2transposeoutmat2amat2)\n\n### `mat2.adjoint(out:mat2, a:mat2)`\n\n  Calculates the adjugate of a mat2\n\n### `mat2.copy(out:mat2, a:mat2)`\n\n  Copy the values from one mat2 to another\n\n### `mat2.create()`\n\n  Creates a new identity mat2\n\n### `mat2.determinant(a:mat2)`\n\n  Calculates the determinant of a mat2\n\n### `mat2.frob(a:mat2)`\n\n  Returns Frobenius norm of a mat2\n\n### `mat2.identity(out:mat2)`\n\n  Set a mat2 to the identity matrix\n\n### `mat2.invert(out:mat2, a:mat2)`\n\n  Inverts a mat2\n\n### `mat2.ldu(L:mat2, D:mat2, U:mat2, a:mat2)`\n\n  Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n\n### `mat2.multiply(out:mat2, a:mat2, b:mat2)`\n\n  Multiplies two mat2's\n\n### `mat2.rotate(out:mat2, a:mat2, rad:Number)`\n\n  Rotates a mat2 by the given angle\n\n### `mat2.scale(out:mat2, a:mat2, v:vec2)`\n\n  Scales the mat2 by the dimensions in the given vec2\n\n### `mat2.transpose(out:mat2, a:mat2)`\n\n  Transpose the values of a mat2\n\n## License\n\n[zlib](http://en.wikipedia.org/wiki/Zlib_License). See [LICENSE.md](http://github.com/hughsk/gl-mat2/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "gl-mat2@1.0.0",
  "dist": {
    "shasum": "c5091fa8c98fa0a2a651f377370cae450f7cc8e9"
  },
  "_from": "gl-mat2@^1.0.0",
  "_resolved": "https://registry.npmjs.org/gl-mat2/-/gl-mat2-1.0.0.tgz"
}
