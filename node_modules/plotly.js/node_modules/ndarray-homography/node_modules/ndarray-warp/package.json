{
  "name": "ndarray-warp",
  "version": "1.0.1",
  "description": "ndarray image warping",
  "main": "warp.js",
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dependencies": {
    "cwise": "^1.0.4",
    "ndarray-linear-interpolate": "^1.0.0"
  },
  "devDependencies": {
    "ndarray": "~1.0.0",
    "luminance": "~1.0.0",
    "lena": "~1.0.0",
    "save-pixels": "~0.2.0",
    "zeros": "~0.0.0",
    "ndarray-unpack": "~0.0.0",
    "tape": "^2.12.3",
    "ndarray-imshow": "^1.0.0"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/ndarray-warp.git"
  },
  "keywords": [
    "ndarray",
    "image",
    "volume",
    "warp",
    "coordinate",
    "change",
    "nonlinear",
    "deform"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "9341ae6b00b0464c0a21aa04fec7eb36ef8c1222",
  "browserify": {
    "transform": [
      "cwise"
    ]
  },
  "readme": "ndarray-warp\n============\nInverse [image warping](http://www.cs.princeton.edu/courses/archive/fall00/cs426/lectures/warp/warp.pdf) operations for [ndarrays](https://github.com/mikolalysenko/ndarray).\n\n\nExample\n=======\n\n```javascript\n//Load input image\nvar lena = require(\"luminance\")(require(\"lena\"))\n\n//Allocate storage for result\nvar result = require(\"zeros\")([512, 512])\n\n//Apply warp\nrequire(\"ndarray-warp\")(result, lena, function(out, inp) {\n  var dx = inp[0] - 256\n  var dy = inp[1] - 256\n  var r  = Math.sqrt(dx * dx + dy * dy)\n  var theta = Math.atan2(dy, dx)\n  \n  out[0] = 0.9 * r * Math.cos(theta + 0.01 * r) + 256\n  out[1] = 0.7 * r * Math.sin(theta + 0.01 * r) + 256\n})\n\n//Save the result to stdout\nrequire(\"save-pixels\")(result, \"png\").pipe(process.stdout)\n```\n\nWhich produces the following image:\n\n<img src=\"https://raw.github.com/mikolalysenko/ndarray-warp/master/example/warp.png\">\n\nInstall\n=======\n\n    npm install ndarray-warp\n    \n### `require(\"ndarray-warp\")(output, input, map(out_coord, in_coord))`\nApplies an inverse warp to an image\n\n* `output` is an ndarray image that gets the result of applying the warp\n* `input` is an ndarray iamge that is warped\n* `map(result, coord)` is a mapping from the coordinates of out image to input image.\n\n  + `result` gets the resulting coordinate in `input`\n  + `coord` is the coordinate in `output`\n\n# Credits\n(c) 2013 Mikola Lysenko. MIT License\n",
  "bugs": {
    "url": "https://github.com/mikolalysenko/ndarray-warp/issues"
  },
  "homepage": "https://github.com/mikolalysenko/ndarray-warp",
  "_id": "ndarray-warp@1.0.1",
  "dist": {
    "shasum": "86e4e6098034b3ac612b17d028d46faac7f3ba51"
  },
  "_from": "ndarray-warp@^1.0.0",
  "_resolved": "https://registry.npmjs.org/ndarray-warp/-/ndarray-warp-1.0.1.tgz"
}
