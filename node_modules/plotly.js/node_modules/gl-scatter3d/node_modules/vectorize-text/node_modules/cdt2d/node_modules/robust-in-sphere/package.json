{
  "name": "robust-in-sphere",
  "version": "1.1.3",
  "description": "Exact arithmetic test to check if point is contained in sphere",
  "main": "in-sphere.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "robust-scale": "^1.0.0",
    "robust-sum": "^1.0.0",
    "two-product": "^1.0.0",
    "robust-subtract": "^1.0.0"
  },
  "devDependencies": {
    "tape": "^2.12.3"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/robust-in-sphere.git"
  },
  "keywords": [
    "sphere",
    "robust",
    "geometric",
    "predicate",
    "exact",
    "geometry"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mikolalysenko/robust-in-sphere/issues"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "firefox/17..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "robust-in-sphere\n================\nExact arithmetic test to check if (n+2) points are cospherical.\n\n(Very) loosely inspired by [Jonathan Shewchuk's work on robust predicates](http://www.cs.cmu.edu/~quake/robust.html).  Currently not as fast, but pull requests are welcome.\n\n[![testling badge](https://ci.testling.com/mikolalysenko/robust-in-sphere.png)](https://ci.testling.com/mikolalysenko/robust-in-sphere)\n\n[![build status](https://secure.travis-ci.org/mikolalysenko/robust-in-sphere.png)](http://travis-ci.org/mikolalysenko/robust-in-sphere)\n\n# Example\n\n```javascript\nvar inSphere = require(\"robust-in-sphere\")\n\nconsole.log(inSphere(\n  [0, 1],\n  [1, 0],\n  [-1, 0],\n  [0, -1]))\n```\n\n# Install\n\n```\nnpm install robust-in-sphere\n```\n\n# API\n\n```javascript\nvar inSphere = require(\"robust-in-sphere\")\n```\n\n### `inSphere(a,b,c,...)`\nTests if a collection of `n+2` points in `n`-dimensional space are cospherical or if the last point is contained in the sphere or not.\n\n* `a,b,c,...` is a list of points\n\n**Returns** A signed integer that gives the orientation of the points\n* `<0` if the last point is contained in the oriented sphere defined by the previous two points\n* `>0` if the last point is outside the sphere\n* `0` is the points are cospherical\n\n**Notes** Up to 6 points it is possible to get a specialized version of `inSphere` that avoids an extra dispatch using the syntax:\n\n```javascript\ninSphere[4](a,b,c,d) === inSphere(a,b,c,d)\n```\n\n## Credits\n(c) 2014 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/mikolalysenko/robust-in-sphere",
  "_id": "robust-in-sphere@1.1.3",
  "dist": {
    "shasum": "572835d0c8cf4c3744cd0b013765b17a371bbc71"
  },
  "_from": "robust-in-sphere@^1.1.3",
  "_resolved": "https://registry.npmjs.org/robust-in-sphere/-/robust-in-sphere-1.1.3.tgz"
}
