{
  "name": "gl-scatter3d",
  "version": "1.0.10",
  "description": "3D scatter plot",
  "main": "pointcloud.js",
  "directories": {
    "example": "example"
  },
  "dependencies": {
    "gl-buffer": "^2.0.6",
    "gl-mat4": "^1.0.0",
    "gl-shader": "^4.0.0",
    "gl-vao": "^1.1.2",
    "glslify": "^2.2.1",
    "typedarray-pool": "^1.0.2",
    "vectorize-text": "^3.0.0"
  },
  "devDependencies": {},
  "scripts": {
    "test": "beefy --open ./example/example.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gl-vis/gl-scatter3d.git"
  },
  "keywords": [
    "scatter",
    "plot",
    "point",
    "cloud",
    "webgl",
    "3d"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/gl-vis/gl-scatter3d/issues"
  },
  "homepage": "https://github.com/gl-vis/gl-scatter3d",
  "browserify": {
    "transform": [
      "glslify"
    ]
  },
  "readme": "gl-scatter3d\n===============\n3D WebGL scatter plots with custom point glyphs.\n\n<img src=\"scatterplot.png\">\n\n# Example\n\n```javascript\nvar createScene = require('gl-plot3d')\nvar createPoints = require('gl-scatter3d')\n\nvar scene = createScene()\n\nvar initialData = {\n  gl: scene.gl,\n  position: [ [1, 0, -1], [0, 1, -1], [0, 0, 1], [1,1,-1], [1,0,1], [0,1,1] ],\n  glyph: [  \"▼\", \"★\", \"■\", \"◆\", \"✚\", \"✖\" ],\n  color: [ [0,1,0], [0,0,1], [1,1,0], [1,0,1], [0,1,1], [0,0,0] ],\n  size: 12,\n  orthographic: true\n}\n\nfor(var i=0; i<100; ++i) {\n  var theta = i / 100.0 * 2.0 * Math.PI\n  var x = Math.cos(theta)\n  var y = Math.sin(theta)\n  initialData.position.push([ x, y, 0 ])\n  initialData.glyph.push(\"●\")\n  initialData.color.push([1, 0, 0])\n}\n\nvar points = createPoints(initialData)\n\nscene.add(points)\n```\n\n# Install\n\n```\nnpm install gl-scatter3d\n```\n\n# Basic interface\n\n## Constructor\n\n#### `var points = require('gl-scatter3d')(options)`\nConstructs a scatter plot with the given parameters.  `options` is an object with the following properties:\n\n* `gl` is a WebGL context\n* `position` (Required) an array of length 3 arrays encoding the position of the points in the scatter plot.\n* `color` A length 3 array encoding the color of the points in the scatter plot.  To set colors per point, pass an array instead.  Default is `[0,0,0]`\n* `glyph` The glyph of each point.  This is a UTF8 string representing some shape.  Per point glyphs can be specified by passing an array.  The default glyph is a circle, `\"●\"`.  For more glyph ideas, check out the [unicode character set](http://unicode-table.com/en/).  Some other fun suggestions: `\"☢\", \"☯\", \"❤\", \"▲\", \"⚑\"`. \n* `size` The size of each point, or specified per-point using an array.  In orthographic, this is in screen coordinates, or in perspective this is in world coordinates. Default is `0.1`\n* `orthographic` A flag, which if set to `true` causes the points to be drawn without perspective scaling.\n* `lineWidth` the width of the outline (set to 0 for no outline) Default is `0`\n* `lineColor` the color of the outline for each marker\n* `font` the font used for drawing the glyphs (default `normal`)\n* `angle` an angle to rotate the glyphs by in radians (default `0`)\n* `alignment` a 2d vector to offset text drawing by (default `[0,0]`)\n* `project` a flag (or array of flags) which determines which axes to project onto\n* `projectOpacity` the opacity of the projected point sprites (default `1.0`)\n* `projectScale` the scaling factor of the projected point sprites (default `2.0/3.0`)\n\n**Returns** A new scatter plot object\n\n## Update\n\n#### `points.update(options)`\nUpdates the scatter plot object.  The parameter `options` has the same properties as the constructor.\n\n### Properties\n\n#### `points.opacity`\nThe opacity of the point set (default 1)\n\n#### `points.projectScale`\nA factor by which projections are rescaled\n\n#### `points.projectOpacity`\nThe opacity of the projected points\n\n#### `points.axesProject`\nAn array of projection values for each point\n\n#### `points.lineWidth`\nThe width of the outline of each point\n\n# Credits\n(c) 2014-2015 Mikola Lysenko. MIT License.  Supported by [plot.ly](https://plot.ly/)",
  "readmeFilename": "README.md",
  "_id": "gl-scatter3d@1.0.10",
  "dist": {
    "shasum": "a79a1977323f51808d79c662df4152ae6655e19b"
  },
  "_from": "gl-scatter3d@^1.0.4",
  "_resolved": "https://registry.npmjs.org/gl-scatter3d/-/gl-scatter3d-1.0.10.tgz"
}
