{
  "name": "robust-compress",
  "version": "1.0.0",
  "description": "Compress a robust sequence",
  "main": "compress.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {},
  "devDependencies": {
    "robust-scale": "^1.0.2",
    "robust-sequence-to-fixed-point": "^2.0.0",
    "tape": "^2.12.3"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/robust-compress.git"
  },
  "keywords": [
    "robust",
    "predicate",
    "floating",
    "point",
    "normalize",
    "compress"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mikolalysenko/robust-compress/issues"
  },
  "homepage": "https://github.com/mikolalysenko/robust-compress",
  "readme": "robust-compress\n===============\nQuickly compress a non-overlapping increasing sequence.  This does not normalize the sequence, but can be useful in some situations.  Based on the algorithm in:\n\nJonathan Shewchuk, [\"Adaptive precision floating-point arithmetic and fast robust predicates for computational geometry\"](http://www.cs.cmu.edu/~quake/robust.html)\n\n# Example\n\n```javascript\nvar compress = require(\"robust-compress\")\n\nvar seq = [1, 2]\n\ncompress(seq)\n\nconsole.log(seq)\n```\n\nOutput:\n\n```javascript\n[ 3 ]\n```\n\n# Install\n\n```\nnpm install robust-compress\n```\n\n# API\n\n#### `require(\"robust-compress\")(seq)`\nApproximately compress a non-overlapping increasing floating point expansion in place.\n\n* `seq` is a robust sequence\n\n**Returns** `seq`\n\n**Note** This method updates `seq` in place\n\n# Credits\n(c) 2014 Mikola Lysenko.  MIT License",
  "readmeFilename": "README.md",
  "_id": "robust-compress@1.0.0",
  "dist": {
    "shasum": "13790c3973bc3737ce0195891b2190c5395f97e5"
  },
  "_from": "robust-compress@^1.0.0",
  "_resolved": "https://registry.npmjs.org/robust-compress/-/robust-compress-1.0.0.tgz"
}
