{
  "name": "quat-slerp",
  "version": "1.0.1",
  "description": "standalone spherical linear interpolation",
  "main": "index.js",
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "dependencies": {
    "gl-quat": "^1.0.0"
  },
  "devDependencies": {
    "almost-equal": "0.0.0",
    "tape": "^3.0.3"
  },
  "scripts": {
    "test": "node test.js"
  },
  "keywords": [
    "slerp",
    "gl-matrix",
    "gl",
    "spherical",
    "linear",
    "interpolation",
    "interp",
    "mix",
    "quaternion",
    "quat"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/mattdesl/quat-slerp.git"
  },
  "homepage": "https://github.com/mattdesl/quat-slerp",
  "bugs": {
    "url": "https://github.com/mattdesl/quat-slerp/issues"
  },
  "readme": "# quat-slerp\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nStandalone spherical interpolation for quaternions, from [gl-matrix](https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/quat.js).\n\n```js\nvar slerp = require('quat-slerp')\n\nvar out = []\nslerp(out, [0, 0, 0, 1], [0, 1, 0, 0], 0.5)\n\n// out is now [0, 0.707106, 0, 0.707106]\n```\n\n## Usage\n\n[![NPM](https://nodei.co/npm/quat-slerp.png)](https://nodei.co/npm/quat-slerp/)\n\n#### `slerp(out, a, b, t)`\n\nInterpolates from quaternion `a` to `b` with the given `t` alpha, storing the result in `out`. Returns the `out` quaternion.\n\n`out`, `a` and `b` are all 4-component arrays in the form `[x, y, z, w]`. \n\n## License\n\nMIT, see [LICENSE.md](http://github.com/mattdesl/quat-slerp/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "quat-slerp@1.0.1",
  "dist": {
    "shasum": "50fcc5516325e2960d79b367f8500badc7f717c9"
  },
  "_from": "quat-slerp@^1.0.0",
  "_resolved": "https://registry.npmjs.org/quat-slerp/-/quat-slerp-1.0.1.tgz"
}
