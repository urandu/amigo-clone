{
  "name": "mat4-interpolate",
  "version": "1.0.4",
  "description": "interpolates two matrices in place",
  "main": "index.js",
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "dependencies": {
    "gl-mat4": "^1.0.1",
    "gl-vec3": "^1.0.2",
    "mat4-decompose": "^1.0.3",
    "mat4-recompose": "^1.0.3",
    "quat-slerp": "^1.0.0"
  },
  "devDependencies": {
    "dom-css": "^1.0.4",
    "domready": "^1.0.7",
    "matrix-to-css": "^1.0.4",
    "tape": "^3.0.3",
    "tweenr": "^2.0.4"
  },
  "scripts": {
    "test": "node test.js"
  },
  "keywords": [
    "animate",
    "animation",
    "matrix",
    "mat4",
    "gl-mat4",
    "gl-matrix",
    "4x4",
    "matrices",
    "decompose",
    "recompose",
    "tween",
    "css",
    "style",
    "quat",
    "slerp",
    "interpolate",
    "mix"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/mattdesl/mat4-interpolate.git"
  },
  "homepage": "https://github.com/mattdesl/mat4-interpolate",
  "bugs": {
    "url": "https://github.com/mattdesl/mat4-interpolate/issues"
  },
  "readme": "# mat4-interpolate\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nInterpolates between two 4x4 matrices, using algorithms from W3C Spec to produce consistent results with CSS animations. Like [mat4-interpolator](https://www.npmjs.org/package/mat4-interpolator) but does the decomposition in place. \n\nTranslation, scale, skew and perspective are interpolated linearly, and rotation is interpolated with spherical interpolation.\n\n```js\nvar mat4 = require('gl-mat4')\nvar start = mat4.create()\nvar end = mat4.fromRotationTranslation([], [0,1,0,0], [20, 50, -10])\nvar out = mat4.create()\n\n//the matrix interpolator\nvar interpolate = require('mat4-interpolate')\n\n\n//.. in your render loop\nfunction render() {\n    //interpolate based on alpha, storing results in 'out' matrix\n    var vlid = interpolate(out, start, end, alpha)\n    \n    if (!valid) {\n        //could not interpolate, you need to animate yourself somehow   \n    }\n}\n```\n\n## Usage\n\n[![NPM](https://nodei.co/npm/mat4-interpolate.png)](https://nodei.co/npm/mat4-interpolate/)\n\n#### `valid = interpolate(out, start, end, alpha)`\n\nInterpolates between `start` and `end` matrices (16 floats in an array) and stores the result in `out`, using `alpha` for interpolation. This will decompose the two matrices into components, lerp/slerp, and then recompose.\n\nReturns `true` is the interpolation succeeded, or `false` if either matrix is non-invertible (i.e. scale or perspective W of zero). W3C suggests falling back to discrete animations in this case.\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/mattdesl/mat4-interpolate/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "mat4-interpolate@1.0.4",
  "dist": {
    "shasum": "b45e1eafceb497f6f309fc14b86b3d74b9907e85"
  },
  "_from": "mat4-interpolate@^1.0.3",
  "_resolved": "https://registry.npmjs.org/mat4-interpolate/-/mat4-interpolate-1.0.4.tgz"
}
