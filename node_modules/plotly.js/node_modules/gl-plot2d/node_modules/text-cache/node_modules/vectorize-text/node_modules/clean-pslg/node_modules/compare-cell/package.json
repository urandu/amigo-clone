{
  "name": "compare-cell",
  "version": "1.0.0",
  "description": "An ordering for sets of integers",
  "main": "compare.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {},
  "devDependencies": {
    "shuffle-array": "0.1.0",
    "tape": "^4.0.0"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mikolalysenko/compare-cells.git"
  },
  "keywords": [
    "order",
    "cell",
    "comparison",
    "sequence",
    "sorting",
    "unordered",
    "simplicial",
    "complex",
    "graph",
    "network",
    "mesh",
    "topology"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mikolalysenko/compare-cells/issues"
  },
  "homepage": "https://github.com/mikolalysenko/compare-cells",
  "readme": "compare-cell\n============\nCompares two unordered integer sequences to test if they contain the same elements. This can be used to implement various algorithms for unoriented simplicial complexes.\n\nFor more information, see the following blog post:\n\n[Comparing sequences without sorting](http://0fps.net/2013/01/24/comparing-sequences-without-sorting/)\n\n# Example\n\n```javascript\nvar compareCells = require('compare-cell')\nvar bsearch = require('binary-search-bounds')\n\n//Create a list of triangles defined by indexed faces\nvar triangles = [\n  [1, 0, 2],\n  [2, 1, 3],\n  [3, 4, 5],\n  [5, 6, 7]\n]\n\n//Sort triangles\ntriangles.sort(compareCells)\n\n//Now we can test if various cells are contained in the list in O(log n)\nconsole.log(bsearch.eq(triangles, [2, 1, 0], compareCells) >= 0)\nconsole.log(bsearch.eq(triangles, [3, 5, 7], compareCells) >= 0)\n```\n\n# API\n\n#### `var d = require('compare-cells')(a, b)`\nTests if two unordered lists contain the same elements.\n\n* `a, b` are arrays of integers\n\n**Returns** An order function which tests if `a` comes before or after `b`.  The value is `0` if they are equal.\n\n# License\n(c) 2015 Mikola Lysenko. MIT License\n",
  "readmeFilename": "README.md",
  "_id": "compare-cell@1.0.0",
  "_from": "compare-cell@^1.0.0"
}
