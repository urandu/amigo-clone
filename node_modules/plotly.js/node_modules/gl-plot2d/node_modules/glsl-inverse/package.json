{
  "name": "glsl-inverse",
  "version": "1.0.0",
  "description": "Invert a matrix in GLSL",
  "main": "index.js",
  "directories": {
    "example": "example"
  },
  "dependencies": {},
  "devDependencies": {
    "gl-matrix-invert": "^1.0.0",
    "a-big-triangle": "^1.0.0",
    "beefy": "^2.1.1",
    "glsl-frobenius": "^1.0.0",
    "glslify": "^1.6.0"
  },
  "scripts": {
    "test": "beefy example/example.js --open"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/stackgl/glsl-inverse.git"
  },
  "keywords": [
    "matrix",
    "inverse",
    "glsl",
    "glslify"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/stackgl/glsl-inverse/issues"
  },
  "browserify": {
    "transform": "glslify"
  },
  "homepage": "https://github.com/stackgl/glsl-inverse",
  "readme": "# glsl-inverse\nInvert a matrix in GLSL.\n\n# Example\n\n```glsl\n#pragma glslify: inverse = require(glsl-inverse)\n\nvoid main() {\n  mat3 m = mat3(1, 2, -3,\n                4, 0, 6,\n                7.1, 8, 9);\n\n  mat3 mi = inverse(m);\n\n  //now mi is the inverse of m\n}\n```\n\n# Usage\n\nInstall with npm:\n\n```\nnpm install glsl-inverse\n```\n\nThen use with [glslify](https://github.com/stackgl/glslify).\n\n# API\n\n```glsl\n#pragma glslify: inverse = require(glsl-inverse)\n```\n\n### `mi = inverse(float|mat2|mat3|mat4 m)`\nComputes inverse of m\n\n* `m` is a matrix to invert, either `float, mat2, mat3` or `mat4`\n\n**Returns** The inverse of `m`\n\n# License\n(c) 2014 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "_id": "glsl-inverse@1.0.0",
  "dist": {
    "shasum": "136c1d6f180aed3824d1a2843e975c204b1da004"
  },
  "_from": "glsl-inverse@^1.0.0",
  "_resolved": "https://registry.npmjs.org/glsl-inverse/-/glsl-inverse-1.0.0.tgz"
}
