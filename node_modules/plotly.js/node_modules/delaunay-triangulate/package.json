{
  "name": "delaunay-triangulate",
  "version": "1.1.6",
  "description": "Delaunay triangulations in any dimension",
  "main": "triangulate.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "uniq": "^1.0.1",
    "incremental-convex-hull": "^1.0.1"
  },
  "devDependencies": {
    "gl-axes": "^2.2.3",
    "tape": "^2.13.1",
    "permutation-parity": "^1.0.0",
    "simplicial-complex": "^1.0.0",
    "game-shell": "^1.0.1",
    "robust-in-sphere": "^1.1.1",
    "robust-orientation": "^1.1.2",
    "gl-now": "^1.3.1",
    "gl-matrix": "^2.1.0",
    "game-shell-orbit-camera": "^1.0.0",
    "esprima": "^1.2.2",
    "gl-simplicial-complex": "^1.0.0",
    "delaunay-fast": "^1.0.1",
    "delaunay": "^0.4.0"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/delaunay-triangulate.git"
  },
  "keywords": [
    "delaunay",
    "exact",
    "robust",
    "geometry"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mikolalysenko/delaunay-triangulate/issues"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "firefox/17..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "delaunay-triangulate\n====================\nTriangulates a set of points into a [Delaunay triangulation](http://en.wikipedia.org/wiki/Delaunay_triangulation).  This code works in arbitrary dimensions, and both in the server and in the browser.\n\n<img src=\"delaunay3d.png\">\n\n[![testling badge](https://ci.testling.com/mikolalysenko/delaunay-triangulate.png)](https://ci.testling.com/mikolalysenko/delaunay-triangulate)\n\n[![build status](https://secure.travis-ci.org/mikolalysenko/delaunay-triangulate.png)](http://travis-ci.org/mikolalysenko/delaunay-triangulate)\n\nHere are some in browser demos:\n\n* [2D Delaunay triangulation](http://mikolalysenko.github.io/delaunay-triangulate/2d.html)\n* [3D Delaunay triangulation](http://mikolalysenko.github.io/delaunay-triangulate/3d.html)\n\n# Example\n\n```javascript\nvar triangulate = require(\"delaunay-triangulate\")\n\nvar points = [\n  [0, 1],\n  [1, 0],\n  [1, 1],\n  [0, 0],\n  [0.5, 0.5]\n]\n\nvar triangles = triangulate(points)\n\nconsole.log(triangles)\n```\n\n# Install\n\n    npm install delaunay-triangulate\n\n# API\n\n#### `require(\"delaunay-triangulate\")(points[,pointAtInfinity])`\nConstructs a Delaunay triangulation over `points`\n\n* `points` is a collection of points in Euclidean space.\n* `pointAtInfinity` is a flag, which if set adds an extra point at infinity to give the spherical compactification of the triangulation.  The index of the point at infinity is `-1`\n\n**Returns** A list of cells representing the faces of the triangulation.  These are triangles in 2D or tetrahedra in 3D.\n\n# Credits\n(c) 2013-2014 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/mikolalysenko/delaunay-triangulate",
  "_id": "delaunay-triangulate@1.1.6",
  "dist": {
    "shasum": "abd45104574e279a897f90f4defe513f8f100da1"
  },
  "_from": "delaunay-triangulate@^1.1.6",
  "_resolved": "https://registry.npmjs.org/delaunay-triangulate/-/delaunay-triangulate-1.1.6.tgz"
}
