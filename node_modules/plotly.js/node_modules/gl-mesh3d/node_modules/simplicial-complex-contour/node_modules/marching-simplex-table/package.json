{
  "name": "marching-simplex-table",
  "version": "1.0.0",
  "description": "Construct the table entries for the marching simplex method",
  "main": "mstab.js",
  "dependencies": {
    "convex-hull": "^1.0.3"
  },
  "devDependencies": {},
  "scripts": {
    "test": "tape test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mikolalysenko/marching-simplex-table.git"
  },
  "keywords": [
    "marching",
    "simplex",
    "table",
    "isosurface"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mikolalysenko/marching-simplex-table/issues"
  },
  "homepage": "https://github.com/mikolalysenko/marching-simplex-table",
  "readme": "marching-simplex-table\n======================\nConstructs a look up table for the marching simplex isosurface extraction algorithm.  The entries of this table correspond to the different topologies that can occur for marching simplices.\n\n# Example\n\n```javascript\nvar makeTable = require('marching-simplex-table')\n\nconsole.log(makeTable(2))\nconsole.log(makeTable(3))\n```\n\n# Install\n\n```\nnpm install marching-simplex-table\n```\n\n# API\n\n#### `require('marching-simplex-table')(d)`\nConstructs the marching simplex table for all simplices of dimension `d`.  The result is a table with 2^(d+1) entries, each corresponding to the (d-1) dimensional cells needed to generate the boundary of the simplex.  Each (d-1) cell is coded as an ordered list of edges in the original simplex giving the vertices of the resulting simplex.\n\n* `d` is the dimension of the table to generate\n\n**Returns** A table of simplex topologies\n\n# Credits\n(c) 2014 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "_id": "marching-simplex-table@1.0.0",
  "dist": {
    "shasum": "4cac8d6da613f032e185fc982dac27cc14cf6a63"
  },
  "_from": "marching-simplex-table@^1.0.0",
  "_resolved": "https://registry.npmjs.org/marching-simplex-table/-/marching-simplex-table-1.0.0.tgz"
}
