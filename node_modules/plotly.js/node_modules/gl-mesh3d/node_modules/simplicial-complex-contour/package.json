{
  "name": "simplicial-complex-contour",
  "version": "1.0.2",
  "description": "Extract a contour on a simplicial complex",
  "main": "contour.js",
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dependencies": {
    "marching-simplex-table": "^1.0.0",
    "ndarray": "^1.0.15",
    "ndarray-sort": "^1.0.0",
    "typedarray-pool": "^1.1.0"
  },
  "devDependencies": {
    "tape": "^3.0.3",
    "bunny": "^1.0.1"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mikolalysenko/simplicial-complex-contour.git"
  },
  "keywords": [
    "simplicial",
    "complex",
    "contour",
    "line",
    "triangle",
    "tetrahedra",
    "mesh"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mikolalysenko/simplicial-complex-contour/issues"
  },
  "homepage": "https://github.com/mikolalysenko/simplicial-complex-contour",
  "readme": "simplicial-complex-contour\n==========================\nFinds a piecewise-linear isocontour on a simplicial complex using the marching simplex method.\n\n# Example\n\n```javascript\nvar extractContour = require('simplicial-complex-contour')\nvar bunny = require('bunny')\n\n//Solve for the curve z=0 on the surface of the bunny\nvar zvalues = bunny.positions.map(function(p) {\n  return p[2]\n})\nvar curve = extractContour(bunny.cells, zvalues, 0.0)\n\n//Unpack edges and positions of curve\nvar curveEdges = curve.cells\nvar curvePositions = curve.vertexWeights.map(function(w,i) {\n  var a = bunny.positions[curve.vertexIds[i][0]]\n  var b = bunny.positions[curve.vertexIds[i][1]]\n\n  return [\n    w * a[0] + (1 - w) * b[0],\n    w * a[1] + (1 - w) * b[1],\n    w * a[2] + (1 - w) * b[2]\n  ]\n})\n\n//Render the curve\nconsole.log({\n  cells: curveEdges,\n  positions: curvePositions\n})\n```\n\n# Install\n\n```\nnpm install simplicial-complex-contour\n```\n\n# API\n\n#### `require('simplicial-complex-contour')(cells, values[, level])`\nComputes a piecewise linear solution to the solution `values=levels`\n\n* `cells` is an array of simplices represented by tuples of vertex indices\n* `values` is an array of values defined at each vertex of the cell complex\n* `level` is the level at which the surface is extracted (Default 0)\n\n**Returns** An object with 3 properties\n\n* `cells` which are the cells of the extracted isosurface\n* `vertexIds` which is an array of pairs of vertex ids encoding the crossing edges\n* `vertexWeights` which are linear weights applied to each vertex\n\n# Credits\n(c) 2014 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "_id": "simplicial-complex-contour@1.0.2",
  "dist": {
    "shasum": "42b0badae2922a6f70888ba557fe793dc62fdfbb"
  },
  "_from": "simplicial-complex-contour@^1.0.0",
  "_resolved": "https://registry.npmjs.org/simplicial-complex-contour/-/simplicial-complex-contour-1.0.2.tgz"
}
