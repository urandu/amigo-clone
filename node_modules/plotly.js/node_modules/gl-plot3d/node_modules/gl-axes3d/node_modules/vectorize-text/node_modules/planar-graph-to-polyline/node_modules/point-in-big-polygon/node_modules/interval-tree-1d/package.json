{
  "name": "interval-tree-1d",
  "version": "1.0.3",
  "description": "1D interval tree data structure",
  "main": "interval-tree.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "binary-search-bounds": "^1.0.0"
  },
  "devDependencies": {
    "covert": "^1.0.1",
    "tape": "^3.5.0"
  },
  "scripts": {
    "test": "tape test/test.js",
    "coverage": "covert test/test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/interval-tree-1d.git"
  },
  "keywords": [
    "point",
    "location",
    "interval",
    "range",
    "query",
    "search",
    "overlap"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mikolalysenko/interval-tree-1d/issues"
  },
  "readme": "interval-tree-1d\n================\nA simple 1D interval tree.  Supports O(log(n)) amortized updates and O(log(n)) queries.\n\n[![build status](https://secure.travis-ci.org/mikolalysenko/interval-tree-1d.png)](http://travis-ci.org/mikolalysenko/interval-tree-1d)\n\n# Example\n\n```javascript\nvar createIntervalTree = require(\"interval-tree-1d\")\n\n//Create some random list of intervals\nvar intervals = [ [1, 2], [-1, 0], [0.5, 1], [-10, 10] ]\n\n//Build tree\nvar tree = createIntervalTree(intervals)\n\n//Find all intervals containing query point 0.7\nconsole.log(\"querying point:\", 0.7)\ntree.queryPoint(0.7, function(interval) {\n  console.log(interval)\n})\n```\n\n# API\n\n```javascript\nvar createIntervalTree = require(\"interval-tree-1d\")\n```\n\n## Constructor\n\n### `var tree = createIntervalTree(intervals)`\nConstructs an interval tree given a list of intervals\n\n## Properties\n\n### `tree.count`\nReturns the number of items in the tree\n\n### `tree.intervals`\nReturns a list of all the intervals in the tree\n\n### `tree.insert(interval)`\nAdds an interval to the tree\n\n### `tree.remove(interval)`\nRemoves an interval from the tree\n\n### `tree.queryPoint(p, visit(interval))`\nVisits all intervals containing the point p\n\n### `tree.queryInterval(lo, hi, visit(interval))`\nReturns all intervals which intersect the interval `[lo, hi]`\n\n# Credits\n(c) 2013-2015 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/mikolalysenko/interval-tree-1d",
  "_id": "interval-tree-1d@1.0.3",
  "dist": {
    "shasum": "896824b8dcbba21ca6c656a446d834bff5813256"
  },
  "_from": "interval-tree-1d@^1.0.1",
  "_resolved": "https://registry.npmjs.org/interval-tree-1d/-/interval-tree-1d-1.0.3.tgz"
}
