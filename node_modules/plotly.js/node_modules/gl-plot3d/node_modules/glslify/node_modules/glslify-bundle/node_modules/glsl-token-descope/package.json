{
  "name": "glsl-token-descope",
  "version": "1.0.2",
  "description": "\"Descope\" an array of GLSL tokens such that they can be safely inlined alongside within another shader without causing any global variable conflicts.",
  "main": "index.js",
  "license": "MIT",
  "scripts": {
    "test": "node test/index.js | tap-spec",
    "eyeball": "node test/eyeball.js"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughsk.io/"
  },
  "dependencies": {
    "glsl-token-assignments": "^2.0.0",
    "glsl-token-depth": "^1.1.0",
    "glsl-token-properties": "^1.0.0",
    "glsl-token-scope": "^1.1.0"
  },
  "devDependencies": {
    "6to5": "^2.5.0",
    "chalk": "^0.5.1",
    "glsl-token-string": "^1.0.0",
    "glsl-tokenizer": "^2.0.0",
    "tap-spec": "^2.1.2",
    "tape": "^3.0.3"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/stackgl/glsl-token-descope.git"
  },
  "keywords": [
    "ecosystem:stackgl"
  ],
  "homepage": "https://github.com/stackgl/glsl-token-descope",
  "bugs": {
    "url": "https://github.com/stackgl/glsl-token-descope/issues"
  },
  "readme": "# glsl-token-descope\n\n[![experimental](http://badges.github.io/stability-badges/dist/experimental.svg)](http://github.com/badges/stability-badges)\n\n\"Descope\" an array of GLSL tokens such that they can be safely inlined alongside\nwithin another shader without causing any global variable conflicts.\n\nUseful for modularising GLSL source files, e.g. as is done in\n[glslify](http://github.com/stackgl/glslify), but should be useful in other\ntools too.\n\nWritten with WebGL's GLSL syntax in mind â€“ all the same, pull requests to\nsupport other variants would be much appreciated :)\n\n## Usage\n\n[![NPM](https://nodei.co/npm/glsl-token-descope.png)](https://nodei.co/npm/glsl-token-descope/)\n\n### `descope(tokens, [rename(name)])`\n\nTakes an array of GLSL `tokens` produced by\n[glsl-tokenizer](http://github.com/stackgl/glsl-tokenizer) and renames variables\nto avoid global conflicts by modifying their \"data\" property in-place.\n\nFor example:\n\n``` javascript\nvar tokenize  = require('glsl-tokenizer/string')\nvar descope   = require('glsl-token-descope')\nvar stringify = require('glsl-token-string')\n\nvar src = `\nprecision mediump float;\n\nuniform mat4  top1;\nuniform float top2;\n\nvoid main() {\n  float x = 1.0;\n  gl_FragColor = vec4(vec3(x), top2);\n}\n`.trim()\n\nvar tokens = tokenize(src)\n\nconsole.log(stringify(descope(tokens)))\n```\n\nWhich should rename `main`, `top1` and `top2` to result in this output:\n\n``` glsl\nprecision mediump float;\n\nuniform mat4  top1_0;\nuniform float top2_1;\n\nvoid main_2() {\n  float x = 1.0;\n  gl_FragColor = vec4(vec3(x), top2_1);\n}\n```\n\nOptionally, you may pass in a custom `rename` function as `descope`'s second\nargument to choose how you rename your variables. For example, adding a custom\n`rename` function to the previous function:\n\n``` javascript\ndescope(tokens, function(name) {\n  return 'a_' + name\n})\n```\n\nWould result in the following shader:\n\n``` glsl\nprecision mediump float;\n\nuniform mat4  a_top1;\nuniform float a_top2;\n\nvoid a_main() {\n  float x = 1.0;\n  gl_FragColor = vec4(vec3(x), a_top2);\n}\n```\n\n## See Also\n\n* [glslify](http://github.com/stackgl/glslify)\n* [glsl-token-scope](http://github.com/stackgl/glsl-token-scope)\n* [glsl-token-depth](http://github.com/stackgl/glsl-token-depth)\n* [glsl-token-properties](http://github.com/stackgl/glsl-token-properties)\n* [glsl-token-assignments](http://github.com/stackgl/glsl-token-assignments)\n* [glsl-token-string](http://github.com/stackgl/glsl-token-string)\n\n## License\n\nMIT. See [LICENSE.md](http://github.com/stackgl/glsl-token-descope/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "glsl-token-descope@1.0.2",
  "dist": {
    "shasum": "1e351f12691afb0c3090f5c92158d08ff9b5f012"
  },
  "_from": "glsl-token-descope@^1.0.2",
  "_resolved": "https://registry.npmjs.org/glsl-token-descope/-/glsl-token-descope-1.0.2.tgz"
}
